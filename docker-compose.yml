version: '3.7'

services:
  frontend:
    build: ./src/front-end
    container_name: frontend
    restart: on-failure
    environment:
      VITE_HOST_IP : ${VITE_HOST_IP}
      VITE_SERVER_HOST : ${VITE_SERVER_HOST}
      VITE_CLIENT_HOST : ${VITE_CLIENT_HOST}
      VITE_SERVER_PORT : ${VITE_SERVER_PORT}
      VITE_CLIENT_PORT : ${VITE_CLIENT_PORT}
      VITE_API : ${VITE_API}
    init : true
    networks:
      - my_network
    ports:
      - "${VITE_CLIENT_PORT}:${VITE_CLIENT_PORT}"

  backend:
    build: ./src/backend
    container_name: backend
    restart: on-failure
    environment:
      HOST_IP : ${HOST_IP}
      SERVER_HOST : ${SERVER_HOST}
      CLIENT_HOST : ${CLIENT_HOST}
      SERVER_PORT : ${SERVER_PORT}
      CLIENT_PORT : ${CLIENT_PORT}
      CLIENT_ID : ${CLIENT_ID}
      TOKEN_SECRET : ${TOKEN_SECRET}
      CLIENT_SECRET : ${CLIENT_SECRET}
      CALLBACK_URL : ${CALLBACK_URL}
      PG_HOST : ${PG_HOST}
      PG_PORT : ${PG_PORT}
      PG_USER : ${PG_USER}
      PG_PASSWORD : ${PG_PASSWORD}
      PG_DATABASE : ${PG_DATABASE}
      GOOGLE_CLIENT_ID : ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET : ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALL_BACK : ${GOOGLE_CALL_BACK}
    init : true
    networks:
      - my_network
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"

  postgresql:
    build: ./src/postgresql
    container_name: postgresql
    restart: on-failure
    environment:
      PG_USER : ${PG_USER}
      PG_HOST : ${PG_HOST}
      PG_PORT : ${PG_PORT}
      PG_PASSWORD : ${PG_PASSWORD}
      PG_DATABASE : ${PG_DATABASE}
    init : true
    networks:
      - my_network
    ports:
      - "${PG_PORT}:${PG_PORT}"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      POSTGRESQL_PASS : ${POSTGRESQL_PASS}
      DB_NAME : ${DB_NAME}
      PMA_HOST : ${PMA_HOST}
      PMA_PORT : ${PMA_PORT}
      PGADMIN_DEFAULT_EMAIL : ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD : ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

